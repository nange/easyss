name: Nightly Release

on:
  workflow_dispatch:

jobs:
  linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Deps
        run: sudo apt update && sudo apt install -y libgtk-3-dev libayatana-appindicator3-dev

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Set up Android NDK
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r29
          add-to-path: false

      - name: Build
        run: make .PHONY

      - name: Build Android
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          make easyss-android-arm64
          make easyss-android-amd64

      - name: Pack
        run: |
          cd bin
          zip easyss-linux-amd64.zip ./easyss
          zip easyss-windows-amd64.zip ./easyss.exe
          zip easyss-without-tray-linux-amd64.zip ./easyss-without-tray
          zip easyss-server-linux-amd64.zip ./easyss-server
          zip easyss-server-windows-amd64.zip ./easyss-server.exe
          mv easyss-android-arm64 libeasyss-arm64.so
          mv easyss-android-amd64 libeasyss-amd64.so
          zip libeasyss-arm64.so.zip ./libeasyss-arm64.so
          zip libeasyss-amd64.so.zip ./libeasyss-amd64.so

      - name: Build Arm64
        run: |
          GOOS=linux GOARCH=arm64 make easyss-without-tray
          GOOS=linux GOARCH=arm64 make easyss-server
      - name: Pack Arm64
        run: |
          cd bin
          zip easyss-without-tray-linux-arm64.zip ./easyss-without-tray
          zip easyss-server-linux-arm64.zip ./easyss-server

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "timestamp_minute=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly-${{ steps.vars.outputs.timestamp_minute }}-${{ steps.vars.outputs.sha_short }}
          tag_name: nightly-${{ steps.vars.outputs.sha_short }}
          prerelease: true
          body: For testing and development only
          files: bin/*.zip

  macos-arm64:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build Arm64
        run: |
          GOOS=darwin GOARCH=arm64 make easyss
          GOOS=darwin GOARCH=arm64 make easyss-server

      - name: Pack Arm64
        run: |
          cd bin
          zip easyss-darwin-arm64.zip ./easyss
          zip easyss-server-darwin-arm64.zip ./easyss-server

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "timestamp_minute=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly-${{ steps.vars.outputs.timestamp_minute }}-${{ steps.vars.outputs.sha_short }}
          tag_name: nightly-${{ steps.vars.outputs.sha_short }}
          prerelease: true
          body: For testing and development only
          files: bin/*.zip

  macos-amd64:
    runs-on: macOS-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Build Amd64
        run: |
          GOOS=darwin GOARCH=amd64 make easyss
          GOOS=darwin GOARCH=amd64 make easyss-server

      - name: Pack Amd64
        run: |
          cd bin
          zip easyss-darwin-amd64.zip ./easyss
          zip easyss-server-darwin-amd64.zip ./easyss-server

      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "timestamp_minute=$(date -u +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          name: Nightly-${{ steps.vars.outputs.timestamp_minute }}-${{ steps.vars.outputs.sha_short }}
          tag_name: nightly-${{ steps.vars.outputs.sha_short }}
          prerelease: true
          body: For testing and development only
          files: bin/*.zip
